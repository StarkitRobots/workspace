#!/bin/bash

MAX_OLD_ENVS=5
CONFIRMATION_SIZE=1000000 #Confirmation required to suppress environments larger than this

confirm() {
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case "$response" in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

remote="10.0.0.1"
if [ $# -gt 0 ]
then
    remote=$1
fi 

# Killing server on host
echo "Killing KidSize on $remote"
`ssh starkit@$remote ./env/stop.sh`

DIR="env"
if [ ! -d $DIR ]; then
    echo "! Environments is not installed"
else
    cd env

    # Cleaning old environents
    ROBOT=`ssh starkit@$remote hostname`
    ENVS=`ssh starkit@$remote ls -Ahdc ./backup_env/* | sort -r`
    K=0
    if [ "$ENVS" == "" ]
    then
	ssh starkit@$remote mkdir  backup_env
    fi;
    
    for E in $ENVS; do
        K=$[$K+1]
        if [ $K -gt $MAX_OLD_ENVS ]; then
            E_SIZE=( $(ssh starkit@$remote du -s $E) )
            E_SIZE=${E_SIZE[0]}
            if [ $E_SIZE -gt $CONFIRMATION_SIZE ]; then
                HUMAN_SIZE=( $(ssh starkit@$remote du -sh $E) )
                HUMAN_SIZE=${HUMAN_SIZE[0]}
                echo "$E contains $HUMAN_SIZE of data, do you really want to remove it?"
                if ! $(confirm) ; then
                    continue
                fi
            fi
            echo "* Removing old environment $E with size ${E_SIZE}"
            ssh starkit@$remote rm -rf $E
        fi
    done

    # Archiving current environment
    echo "* Retrieving current env date"
    CHG=`ssh starkit@$remote stat -c %y ./env/`

    if [ "$CHG" != "" ]; then
        FMT="+%d_%m_%Y__%H_%M_%S"
        DATE=`date -d "$CHG" "+%d_%m_%Y__%H_%M_%S"`
        OLDNAME="backup_env/$DATE"
        echo "* Backuping old env to $OLDNAME"
        `ssh starkit@$remote mv env $OLDNAME`
    fi

    # Sending current environment
    echo "* Sending environment files"
    ssh starkit@$remote rm -rf env
    ssh starkit@$remote mkdir env
    rsync -l -r ./strategies ./$ROBOT ./common ./boot.sh ./stop.sh ./out.sh starkit@$remote:env/
fi
